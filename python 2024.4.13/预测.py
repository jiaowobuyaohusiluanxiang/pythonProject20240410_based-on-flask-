# 导入必要的库
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# 读取数据
data = '''
2020-01-01,良,59,42,68,5,25,0.73,42
2020-01-02,优,48,32,51,5,31,0.59,48
2020-01-03,良,63,44,74,5,46,0.68,51
2020-01-04,良,67,48,79,5,40,0.63,62
2020-01-05,优,41,24,43,5,21,0.50,71
2020-01-06,优,36,18,36,5,21,0.51,72
2020-01-07,优,49,25,50,5,47,0.59,46
2020-01-08,优,45,23,47,6,37,0.61,56
2020-01-09,优,50,24,52,5,22,0.75,88
2020-01-10,良,57,36,63,5,31,0.79,81
2020-01-11,良,62,42,73,5,39,0.73,56
2020-01-12,优,38,16,40,6,31,0.96,42
2020-01-13,良,51,30,53,6,33,0.91,50
2020-01-14,优,49,31,52,5,28,0.68,73
2020-01-15,良,53,34,57,5,19,0.63,83
2020-01-16,良,59,40,65,5,26,0.68,68
2020-01-17,优,30,16,30,5,23,0.88,42
2020-01-18,优,36,20,36,5,22,0.83,51
2020-01-19,优,48,32,49,5,22,0.82,40
2020-01-20,优,37,25,37,5,21,0.77,51
2020-01-21,优,49,33,49,5,22,0.70,65
2020-01-22,优,44,30,45,4,20,0.59,73
2020-01-23,优,37,24,37,5,18,0.58,62
2020-01-24,优,26,16,25,5,13,0.56,57
2020-01-25,优,34,24,31,5,11,0.58,54
2020-01-26,优,14,8,11,4,11,0.76,26
2020-01-27,优,13,5,8,4,10,0.65,42
2020-01-28,优,18,11,13,4,9,0.60,51
2020-01-29,优,31,21,24,5,10,0.65,63
2020-01-30,优,38,26,33,5,11,0.55,73
2020-01-31,优,42,29,35,5,13,0.51,80
2020-02-01,优,42,28,39,5,14,0.53,78
2020-02-02,优,43,28,43,5,11,0.53,93
2020-02-03,优,37,24,38,5,14,0.48,75
2020-02-04,优,24,16,23,5,14,0.59,41
2020-02-05,优,23,15,21,4,12,0.56,41
2020-02-06,优,31,18,30,5,10,0.50,78
2020-02-07,优,36,21,36,5,14,0.55,46
2020-02-08,优,13,6,8,4,15,0.69,37
2020-02-09,优,9,2,5,4,13,0.72,21
2020-02-10,优,16,8,15,4,12,0.61,48
2020-02-11,良,37,21,34,5,18,0.67,56
2020-02-12,良,43,30,42,5,19,0.65,49
2020-02-13,良,47,33,47,5,24,0.69,56
2020-02-14,良,47,34,49,5,21,0.63,67
2020-02-15,良,50,38,54,5,26,0.68,65
2020-02-16,良,52,40,57,5,28,0.70,68
2020-02-17,良,52,40,58,5,28,0.70,68
2020-02-18,良,52,38,57,5,28,0.69,65
2020-02-19,良,48,35,54,5,25,0.65,73
2020-02-20,良,44,30,49,5,25,0.63,71
2020-02-21,良,44,29,48,5,25,0.64,70
2020-02-22,良,50,35,55,5,25,0.61,69
2020-02-23,良,48,32,52,5,21,0.57,67
2020-02-24,良,44,28,48,5,22,0.58,63
2020-02-25,良,45,30,48,5,19,0.57,70
2020-02-26,良,43,29,45,5,19,0.56,65
2020-02-27,良,45,31,47,5,21,0.57,68
2020-02-28,良,45,31,49,5,22,0.56,70
2020-02-29,良,44,31,48,5,22,0.55,69
'''
# Filter out rows with non-numeric AQI values
df_numeric_aqi = df[df['AQI'].str.isnumeric()]

# Convert AQI column to numeric
df_numeric_aqi['AQI'] = pd.to_numeric(df_numeric_aqi['AQI'])

# Determine independent and dependent variables
X = df_numeric_aqi.drop(columns=['AQI_Predict'])
y = df_numeric_aqi['AQI_Predict']

# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create a linear regression model
model = LinearRegression()

# Train the model
model.fit(X_train, y_train)

# Predict on the test set
y_pred = model.predict(X_test)

# Calculate the root mean squared error
mse = mean_squared_error(y_test, y_pred)
rmse = np.sqrt(mse)
print("Root Mean Squared Error:", rmse)

# Visualize the comparison between predicted and true values
plt.scatter(y_test, y_pred)
plt.xlabel("True Values")
plt.ylabel("Predictions")
plt.title("True Values vs. Predictions")
plt.show()
